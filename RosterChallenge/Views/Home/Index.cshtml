@model RosterModel
@{
    ViewData["Title"] = "Artist Roster";
}

@section styles{
    <link href="~/css/Roster.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/css/theme.default.min.css" integrity="sha512-wghhOJkjQX0Lh3NSWvNKeZ0ZpNn+SPVXX1Qyc9OCaogADktxrBiBdKGDoqVUOyhStvMBmJQ8ZdMHiR3wuEq8+w==" crossorigin="anonymous" referrerpolicy="no-referrer" />
}
@section dialogs{
    <partial name="~/Views/Home/Dialogs/_addEditArtistModal.cshtml" />
    <partial name="~/Views/Shared/Dialogs/_confirmModal.cshtml" />
    <partial name="~/Views/Shared/Dialogs/_notificationModal.cshtml" />
}

<Table class="fixed-header">
    <thead>
        <tr>
            <td><div class="mx-3 fw-bold">Paid</div></td>
            <td class="mx-3 fw-bold">Artist</td>
            <td><div class="mx-3 fw-bold">Rate</div></td>
            <td><div class="float-right mx-3 fw-bold">Total Steams</div></td>
            <td><div class="float-right mx-3 fw-bold">Payout</div></td>
            <td><div class="float-right mx-3 fw-bold">Monthly Avg.</div></td>
        </tr>
    </thead>
    <tbody class="fixed-header-body">
        @foreach (Artist a in Model.Roster)
        {
            @await Html.PartialAsync("~/Views/Home/Partials/_rosterRow.cshtml", a)
        }
    </tbody>
</Table>

@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/js/jquery.tablesorter.min.js" integrity="sha512-qzgd5cYSZcosqpzpn7zF2ZId8f/8CHmFKZ8j7mU4OUXTNRd5g+ZHBPsgKEwoqxCtdQvExE5LprwwPAgoicguNg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/js/jquery.tablesorter.widgets.min.js" integrity="sha512-dj/9K5GRIEZu+Igm9tC16XPOTz0RdPk9FGxfZxShWf65JJNU2TjbElGjuOo3EhwAJRPhJxwEJ5b+/Ouo+VqZdQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        $(document).ready(function () {
            //custom sort to handle checkboxes
            $.tablesorter.addParser({
                id: 'checkboxSort',
                is: function (s) {
                    return false;
                },
                format: function (s, table, cell) {
                    return $($(cell).find("input[type='checkbox']")[0]).is(":checked");
                },
                type: 'numeric'
            });

            $('table').tablesorter({
                "theme": "default", headers: {
                    0: {
                        sorter: 'checkboxSort'
                    }
                } });
        });

        function refreshArtistRow(ID) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("getArtistRow", "Home")',
                data: {ID: ID},
                success: function (result) {
                    //find tr by ID, if exists replace, if not add to table and sort
                    if ($("tbody").find("tr[data-id='" + $(result).data("id") + "']").length > 0) {
                        $("tbody").find("tr[data-id='" + $(result).data("id") + "']").replaceWith(result);
                    } else {
                        $("tbody").append(result);
                    }

                    $('table').trigger('update');
                    bindEdit();
                    bindDelete();

                    var sortlist = $("table")[0].config.sortList;
                    if (sortlist.length == 0) {
                        $.tablesorter.sortOn($("table")[0].config, [[4, 0]]);//default sort by payout
                    } else {
                        $.tablesorter.sortOn($("table")[0].config, sortlist);//resort by whatever order was most recently done
                    }
                }
            });
        }

        $("#AddArtist").on("click", function () {
            openAddEditModal("Add Artist");
            $("#ID").val(0);
        });

        $("table input[type='checkbox']").on("click", function () {
            var checkbox = $(this);
            var ID = checkbox.closest("tr").data("id");
            var paid = checkbox.is(":checked");
            var artist = checkbox.closest("tr").find(".artist div").html();
            var revertCheckox = function () {
                checkbox.prop('checked', !paid);
            }

            openConfirmModal("Confirm Paid Status", "Would you like to update " + artist + " as " + (paid ? "paid?" : "unpaid?"), function () {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("updatePaidArtistByID", "Home")',
                    data: { ID: ID, paid: paid },
                    success: function (result) {
                        if (result.success != true) {
                            openNotificationModal("Error Occurred", "An error occured while updating artist: " + result.error, revertCheckox);
                        }
                    }
                });
            }, revertCheckox);
        });

        var bindEdit = function () {
            $(".bi-pencil").on("click", function () {
                var ID = $(this).closest("tr").data("id");

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("getArtistByID", "Home")',
                    data: { ID: ID },
                    success: function (result) {
                        if (result.success == true) {
                            $("#artist").val(result.artist.artist);
                            $("#rate").val(result.artist.rate);
                            $("#streams").val(result.artist.streams);
                            $("#paid").val(result.artist.paid);
                            $("#ID").val(result.artist.id);
                            openAddEditModal("Edit Artist");
                        }
                        else {
                            openNotificationModal("Error Occurred", "An error occured while retrieving information for artist: " + result.error);
                        }
                    }
                });
            });
        };

        var bindDelete = function () {
            $(".bi-trash").on("click", function () {
                var ID = $(this).closest("tr").data("id");
                var artist = $(this).closest("tr").find(".artist div").html();

                openConfirmModal("Confirm Deletion", "Are you sure you would like to delete the following artist: " + artist + "?", function () {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("deleteArtistByID", "Home")',
                        data: { ID: ID },
                        success: function (result) {
                            if (result.success == true) {
                                $("tbody").find("tr[data-id='" + ID + "']").remove();
                                $('table').trigger('update');
                                bindEdit();
                                bindDelete();
                            }
                            else {
                                openNotificationModal("Error Occurred", "An error occured while deleting artist: " + result.error);
                            }
                        }
                    });
                })
            });
        };

        bindEdit();
        bindDelete();

        ///////////Add Edit Modal//////////////

        function blankOutAddEditModal() {
            $("#artist").val("");
            $("#rate").val("");
            $("#streams").val("");
            $("#paid").val("");
            $("#ID").val("");
        }

        function closeAddEditModal() {
            $("#AddEditModal.modal").hide();
            $("#AddEditBackdrop.modal-backdrop").hide();
        }

        function openAddEditModal(title) {
            $("#AddEditModal .modal-header").text(title);
            $("#AddEditModal.modal").show();
            $("#AddEditBackdrop.modal-backdrop").show();
        }

        $("#AddEditCancelButton").on("click", function(){
            closeAddEditModal();
            blankOutAddEditModal();
        });

        $("#AddEditSaveButton").on("click", function () {
            if (!document.querySelector('#AddEditForm').reportValidity()) {
                return;
            }

            var URL;
            if ($("#ID").val() != "0") {
                URL = '@Url.Action("UpdateArtist", "Home")';
            } else {
                URL = '@Url.Action("AddArtist", "Home")';
            }

            var artist = { "artist": $("#artist").val(), "rate": $("#rate").val(), "paid": $("#artistPaid").is(":checked"), "streams": $("#streams").val(), "ID": $("#ID").val()};

            $.ajax({
                type: "POST",
                url: URL,
                data: artist,
                success: function (result) {
                    if (result.success == true) {
                        refreshArtistRow(result.id);
                        blankOutAddEditModal();
                        closeAddEditModal();
                    }
                    else {
                        openNotificationModal("Error Occurred", "An error occured while saving: " + result.error);
                    }

                }
            });
        });
    </script>
}